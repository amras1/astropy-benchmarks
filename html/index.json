{
    "benchmarks": {
        "asciibench.ASCIISuite.time_aastex_read_float": {
            "code": "def time_aastex_read_float(self):\n    self.read('aastex', 'float')\n", 
            "goal_time": 2.0, 
            "name": "asciibench.ASCIISuite.time_aastex_read_float", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "asciibench.ASCIISuite.time_aastex_read_int": {
            "code": "def time_aastex_read_int(self):\n    self.read('aastex', 'int')\n", 
            "goal_time": 2.0, 
            "name": "asciibench.ASCIISuite.time_aastex_read_int", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "asciibench.ASCIISuite.time_aastex_read_string": {
            "code": "def time_aastex_read_string(self):\n    self.read('aastex', 'string')\n", 
            "goal_time": 2.0, 
            "name": "asciibench.ASCIISuite.time_aastex_read_string", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "asciibench.ASCIISuite.time_aastex_write_float": {
            "code": "def time_aastex_write_float(self):\n    self.write('aastex', 'float')\n", 
            "goal_time": 2.0, 
            "name": "asciibench.ASCIISuite.time_aastex_write_float", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "asciibench.ASCIISuite.time_aastex_write_int": {
            "code": "def time_aastex_write_int(self):\n    self.write('aastex', 'int')\n", 
            "goal_time": 2.0, 
            "name": "asciibench.ASCIISuite.time_aastex_write_int", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "asciibench.ASCIISuite.time_aastex_write_string": {
            "code": "def time_aastex_write_string(self):\n    self.write('aastex', 'string')\n", 
            "goal_time": 2.0, 
            "name": "asciibench.ASCIISuite.time_aastex_write_string", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "asciibench.ASCIISuite.time_basic_read_float": {
            "code": "def time_basic_read_float(self):\n    self.read('basic', 'float')\n", 
            "goal_time": 2.0, 
            "name": "asciibench.ASCIISuite.time_basic_read_float", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "asciibench.ASCIISuite.time_basic_read_int": {
            "code": "def time_basic_read_int(self):\n    self.read('basic', 'int')\n", 
            "goal_time": 2.0, 
            "name": "asciibench.ASCIISuite.time_basic_read_int", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "asciibench.ASCIISuite.time_basic_read_string": {
            "code": "def time_basic_read_string(self):\n    self.read('basic', 'string')\n", 
            "goal_time": 2.0, 
            "name": "asciibench.ASCIISuite.time_basic_read_string", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "asciibench.ASCIISuite.time_basic_write_float": {
            "code": "def time_basic_write_float(self):\n    self.write('basic', 'float')\n", 
            "goal_time": 2.0, 
            "name": "asciibench.ASCIISuite.time_basic_write_float", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "asciibench.ASCIISuite.time_basic_write_int": {
            "code": "def time_basic_write_int(self):\n    self.write('basic', 'int')\n", 
            "goal_time": 2.0, 
            "name": "asciibench.ASCIISuite.time_basic_write_int", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "asciibench.ASCIISuite.time_basic_write_string": {
            "code": "def time_basic_write_string(self):\n    self.write('basic', 'string')\n", 
            "goal_time": 2.0, 
            "name": "asciibench.ASCIISuite.time_basic_write_string", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "asciibench.ASCIISuite.time_commented_header_read_float": {
            "code": "def time_commented_header_read_float(self):\n    self.read('commented_header', 'float')\n", 
            "goal_time": 2.0, 
            "name": "asciibench.ASCIISuite.time_commented_header_read_float", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "asciibench.ASCIISuite.time_commented_header_read_int": {
            "code": "def time_commented_header_read_int(self):\n    self.read('commented_header', 'int')\n", 
            "goal_time": 2.0, 
            "name": "asciibench.ASCIISuite.time_commented_header_read_int", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "asciibench.ASCIISuite.time_commented_header_read_string": {
            "code": "def time_commented_header_read_string(self):\n    self.read('commented_header', 'string')\n", 
            "goal_time": 2.0, 
            "name": "asciibench.ASCIISuite.time_commented_header_read_string", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "asciibench.ASCIISuite.time_commented_header_write_float": {
            "code": "def time_commented_header_write_float(self):\n    self.write('commented_header', 'float')\n", 
            "goal_time": 2.0, 
            "name": "asciibench.ASCIISuite.time_commented_header_write_float", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "asciibench.ASCIISuite.time_commented_header_write_int": {
            "code": "def time_commented_header_write_int(self):\n    self.write('commented_header', 'int')\n", 
            "goal_time": 2.0, 
            "name": "asciibench.ASCIISuite.time_commented_header_write_int", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "asciibench.ASCIISuite.time_commented_header_write_string": {
            "code": "def time_commented_header_write_string(self):\n    self.write('commented_header', 'string')\n", 
            "goal_time": 2.0, 
            "name": "asciibench.ASCIISuite.time_commented_header_write_string", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "asciibench.ASCIISuite.time_csv_read_float": {
            "code": "def time_csv_read_float(self):\n    self.read('csv', 'float')\n", 
            "goal_time": 2.0, 
            "name": "asciibench.ASCIISuite.time_csv_read_float", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "asciibench.ASCIISuite.time_csv_read_int": {
            "code": "def time_csv_read_int(self):\n    self.read('csv', 'int')\n", 
            "goal_time": 2.0, 
            "name": "asciibench.ASCIISuite.time_csv_read_int", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "asciibench.ASCIISuite.time_csv_read_string": {
            "code": "def time_csv_read_string(self):\n    self.read('csv', 'string')\n", 
            "goal_time": 2.0, 
            "name": "asciibench.ASCIISuite.time_csv_read_string", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "asciibench.ASCIISuite.time_csv_write_float": {
            "code": "def time_csv_write_float(self):\n    self.write('csv', 'float')\n", 
            "goal_time": 2.0, 
            "name": "asciibench.ASCIISuite.time_csv_write_float", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "asciibench.ASCIISuite.time_csv_write_int": {
            "code": "def time_csv_write_int(self):\n    self.write('csv', 'int')\n", 
            "goal_time": 2.0, 
            "name": "asciibench.ASCIISuite.time_csv_write_int", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "asciibench.ASCIISuite.time_csv_write_string": {
            "code": "def time_csv_write_string(self):\n    self.write('csv', 'string')\n", 
            "goal_time": 2.0, 
            "name": "asciibench.ASCIISuite.time_csv_write_string", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "asciibench.ASCIISuite.time_fixedwidth_no_header_read_float": {
            "code": "def time_fixedwidth_no_header_read_float(self):\n    self.read('fixed_width_no_header', 'float')\n", 
            "goal_time": 2.0, 
            "name": "asciibench.ASCIISuite.time_fixedwidth_no_header_read_float", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "asciibench.ASCIISuite.time_fixedwidth_no_header_read_int": {
            "code": "def time_fixedwidth_no_header_read_int(self):\n    self.read('fixed_width_no_header', 'int')\n", 
            "goal_time": 2.0, 
            "name": "asciibench.ASCIISuite.time_fixedwidth_no_header_read_int", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "asciibench.ASCIISuite.time_fixedwidth_no_header_read_string": {
            "code": "def time_fixedwidth_no_header_read_string(self):\n    self.read('fixed_width_no_header', 'string')\n", 
            "goal_time": 2.0, 
            "name": "asciibench.ASCIISuite.time_fixedwidth_no_header_read_string", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "asciibench.ASCIISuite.time_fixedwidth_no_header_write_float": {
            "code": "def time_fixedwidth_no_header_write_float(self):\n    self.write('fixed_width_no_header', 'float')\n", 
            "goal_time": 2.0, 
            "name": "asciibench.ASCIISuite.time_fixedwidth_no_header_write_float", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "asciibench.ASCIISuite.time_fixedwidth_no_header_write_int": {
            "code": "def time_fixedwidth_no_header_write_int(self):\n    self.write('fixed_width_no_header', 'int')\n", 
            "goal_time": 2.0, 
            "name": "asciibench.ASCIISuite.time_fixedwidth_no_header_write_int", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "asciibench.ASCIISuite.time_fixedwidth_no_header_write_string": {
            "code": "def time_fixedwidth_no_header_write_string(self):\n    self.write('fixed_width_no_header', 'string')\n", 
            "goal_time": 2.0, 
            "name": "asciibench.ASCIISuite.time_fixedwidth_no_header_write_string", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "asciibench.ASCIISuite.time_fixedwidth_read_float": {
            "code": "def time_fixedwidth_read_float(self):\n    self.read('fixed_width', 'float')\n", 
            "goal_time": 2.0, 
            "name": "asciibench.ASCIISuite.time_fixedwidth_read_float", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "asciibench.ASCIISuite.time_fixedwidth_read_int": {
            "code": "def time_fixedwidth_read_int(self):\n    self.read('fixed_width', 'int')\n", 
            "goal_time": 2.0, 
            "name": "asciibench.ASCIISuite.time_fixedwidth_read_int", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "asciibench.ASCIISuite.time_fixedwidth_read_string": {
            "code": "def time_fixedwidth_read_string(self):\n    self.read('fixed_width', 'string')\n", 
            "goal_time": 2.0, 
            "name": "asciibench.ASCIISuite.time_fixedwidth_read_string", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "asciibench.ASCIISuite.time_fixedwidth_two_line_read_float": {
            "code": "def time_fixedwidth_two_line_read_float(self):\n    self.read('fixed_width_two_line', 'float')\n", 
            "goal_time": 2.0, 
            "name": "asciibench.ASCIISuite.time_fixedwidth_two_line_read_float", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "asciibench.ASCIISuite.time_fixedwidth_two_line_read_int": {
            "code": "def time_fixedwidth_two_line_read_int(self):\n    self.read('fixed_width_two_line', 'int')\n", 
            "goal_time": 2.0, 
            "name": "asciibench.ASCIISuite.time_fixedwidth_two_line_read_int", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "asciibench.ASCIISuite.time_fixedwidth_two_line_read_string": {
            "code": "def time_fixedwidth_two_line_read_string(self):\n    self.read('fixed_width_two_line', 'string')\n", 
            "goal_time": 2.0, 
            "name": "asciibench.ASCIISuite.time_fixedwidth_two_line_read_string", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "asciibench.ASCIISuite.time_fixedwidth_two_line_write_float": {
            "code": "def time_fixedwidth_two_line_write_float(self):\n    self.write('fixed_width_no_header', 'float')\n", 
            "goal_time": 2.0, 
            "name": "asciibench.ASCIISuite.time_fixedwidth_two_line_write_float", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "asciibench.ASCIISuite.time_fixedwidth_two_line_write_int": {
            "code": "def time_fixedwidth_two_line_write_int(self):\n    self.write('fixed_width_no_header', 'int')\n", 
            "goal_time": 2.0, 
            "name": "asciibench.ASCIISuite.time_fixedwidth_two_line_write_int", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "asciibench.ASCIISuite.time_fixedwidth_two_line_write_string": {
            "code": "def time_fixedwidth_two_line_write_string(self):\n    self.write('fixed_width_no_header', 'string')\n", 
            "goal_time": 2.0, 
            "name": "asciibench.ASCIISuite.time_fixedwidth_two_line_write_string", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "asciibench.ASCIISuite.time_fixedwidth_write_float": {
            "code": "def time_fixedwidth_write_float(self):\n    self.write('fixed_width', 'float')\n", 
            "goal_time": 2.0, 
            "name": "asciibench.ASCIISuite.time_fixedwidth_write_float", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "asciibench.ASCIISuite.time_fixedwidth_write_int": {
            "code": "def time_fixedwidth_write_int(self):\n    self.write('fixed_width', 'int')\n", 
            "goal_time": 2.0, 
            "name": "asciibench.ASCIISuite.time_fixedwidth_write_int", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "asciibench.ASCIISuite.time_fixedwidth_write_string": {
            "code": "def time_fixedwidth_write_string(self):\n    self.write('fixed_width', 'string')\n", 
            "goal_time": 2.0, 
            "name": "asciibench.ASCIISuite.time_fixedwidth_write_string", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "asciibench.ASCIISuite.time_ipac_read_float": {
            "code": "def time_ipac_read_float(self):\n    self.read('ipac', 'float')\n", 
            "goal_time": 2.0, 
            "name": "asciibench.ASCIISuite.time_ipac_read_float", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "asciibench.ASCIISuite.time_ipac_read_int": {
            "code": "def time_ipac_read_int(self):\n    self.read('ipac', 'int')\n", 
            "goal_time": 2.0, 
            "name": "asciibench.ASCIISuite.time_ipac_read_int", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "asciibench.ASCIISuite.time_ipac_read_string": {
            "code": "def time_ipac_read_string(self):\n    self.read('ipac', 'string')\n", 
            "goal_time": 2.0, 
            "name": "asciibench.ASCIISuite.time_ipac_read_string", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "asciibench.ASCIISuite.time_ipac_write_float": {
            "code": "def time_ipac_write_float(self):\n    self.write('ipac', 'float')\n", 
            "goal_time": 2.0, 
            "name": "asciibench.ASCIISuite.time_ipac_write_float", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "asciibench.ASCIISuite.time_ipac_write_int": {
            "code": "def time_ipac_write_int(self):\n    self.write('ipac', 'int')\n", 
            "goal_time": 2.0, 
            "name": "asciibench.ASCIISuite.time_ipac_write_int", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "asciibench.ASCIISuite.time_ipac_write_string": {
            "code": "def time_ipac_write_string(self):\n    self.write('ipac', 'string')\n", 
            "goal_time": 2.0, 
            "name": "asciibench.ASCIISuite.time_ipac_write_string", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "asciibench.ASCIISuite.time_latex_read_float": {
            "code": "def time_latex_read_float(self):\n    self.read('latex', 'float')\n", 
            "goal_time": 2.0, 
            "name": "asciibench.ASCIISuite.time_latex_read_float", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "asciibench.ASCIISuite.time_latex_read_int": {
            "code": "def time_latex_read_int(self):\n    self.read('latex', 'int')\n", 
            "goal_time": 2.0, 
            "name": "asciibench.ASCIISuite.time_latex_read_int", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "asciibench.ASCIISuite.time_latex_read_string": {
            "code": "def time_latex_read_string(self):\n    self.read('latex', 'string')\n", 
            "goal_time": 2.0, 
            "name": "asciibench.ASCIISuite.time_latex_read_string", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "asciibench.ASCIISuite.time_latex_write_float": {
            "code": "def time_latex_write_float(self):\n    self.write('latex', 'float')\n", 
            "goal_time": 2.0, 
            "name": "asciibench.ASCIISuite.time_latex_write_float", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "asciibench.ASCIISuite.time_latex_write_int": {
            "code": "def time_latex_write_int(self):\n    self.write('latex', 'int')\n", 
            "goal_time": 2.0, 
            "name": "asciibench.ASCIISuite.time_latex_write_int", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "asciibench.ASCIISuite.time_latex_write_string": {
            "code": "def time_latex_write_string(self):\n    self.write('latex', 'string')\n", 
            "goal_time": 2.0, 
            "name": "asciibench.ASCIISuite.time_latex_write_string", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "asciibench.ASCIISuite.time_noheader_read_float": {
            "code": "def time_noheader_read_float(self):\n    self.read('no_header', 'float')\n", 
            "goal_time": 2.0, 
            "name": "asciibench.ASCIISuite.time_noheader_read_float", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "asciibench.ASCIISuite.time_noheader_read_int": {
            "code": "def time_noheader_read_int(self):\n    self.read('no_header', 'int')\n", 
            "goal_time": 2.0, 
            "name": "asciibench.ASCIISuite.time_noheader_read_int", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "asciibench.ASCIISuite.time_noheader_read_string": {
            "code": "def time_noheader_read_string(self):\n    self.read('no_header', 'string')\n", 
            "goal_time": 2.0, 
            "name": "asciibench.ASCIISuite.time_noheader_read_string", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "asciibench.ASCIISuite.time_noheader_write_float": {
            "code": "def time_noheader_write_float(self):\n    self.write('no_header', 'float')\n", 
            "goal_time": 2.0, 
            "name": "asciibench.ASCIISuite.time_noheader_write_float", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "asciibench.ASCIISuite.time_noheader_write_int": {
            "code": "def time_noheader_write_int(self):\n    self.write('no_header', 'int')\n", 
            "goal_time": 2.0, 
            "name": "asciibench.ASCIISuite.time_noheader_write_int", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "asciibench.ASCIISuite.time_noheader_write_string": {
            "code": "def time_noheader_write_string(self):\n    self.write('no_header', 'string')\n", 
            "goal_time": 2.0, 
            "name": "asciibench.ASCIISuite.time_noheader_write_string", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "asciibench.ASCIISuite.time_rdb_read_float": {
            "code": "def time_rdb_read_float(self):\n    self.read('rdb', 'float')\n", 
            "goal_time": 2.0, 
            "name": "asciibench.ASCIISuite.time_rdb_read_float", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "asciibench.ASCIISuite.time_rdb_read_int": {
            "code": "def time_rdb_read_int(self):\n    self.read('rdb', 'int')\n", 
            "goal_time": 2.0, 
            "name": "asciibench.ASCIISuite.time_rdb_read_int", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "asciibench.ASCIISuite.time_rdb_read_string": {
            "code": "def time_rdb_read_string(self):\n    self.read('rdb', 'string')\n", 
            "goal_time": 2.0, 
            "name": "asciibench.ASCIISuite.time_rdb_read_string", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "asciibench.ASCIISuite.time_rdb_write_float": {
            "code": "def time_rdb_write_float(self):\n    self.write('rdb', 'float')\n", 
            "goal_time": 2.0, 
            "name": "asciibench.ASCIISuite.time_rdb_write_float", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "asciibench.ASCIISuite.time_rdb_write_int": {
            "code": "def time_rdb_write_int(self):\n    self.write('rdb', 'int')\n", 
            "goal_time": 2.0, 
            "name": "asciibench.ASCIISuite.time_rdb_write_int", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "asciibench.ASCIISuite.time_rdb_write_string": {
            "code": "def time_rdb_write_string(self):\n    self.write('rdb', 'string')\n", 
            "goal_time": 2.0, 
            "name": "asciibench.ASCIISuite.time_rdb_write_string", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "asciibench.ASCIISuite.time_sextractor_read_float": {
            "code": "def time_sextractor_read_float(self):\n    self.read('sextractor', 'float')\n", 
            "goal_time": 2.0, 
            "name": "asciibench.ASCIISuite.time_sextractor_read_float", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "asciibench.ASCIISuite.time_sextractor_read_int": {
            "code": "def time_sextractor_read_int(self):\n    self.read('sextractor', 'int')\n", 
            "goal_time": 2.0, 
            "name": "asciibench.ASCIISuite.time_sextractor_read_int", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "asciibench.ASCIISuite.time_sextractor_read_string": {
            "code": "def time_sextractor_read_string(self):\n    self.read('sextractor', 'string')\n", 
            "goal_time": 2.0, 
            "name": "asciibench.ASCIISuite.time_sextractor_read_string", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "asciibench.ASCIISuite.time_tab_read_float": {
            "code": "def time_tab_read_float(self):\n    self.read('tab', 'float')\n", 
            "goal_time": 2.0, 
            "name": "asciibench.ASCIISuite.time_tab_read_float", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "asciibench.ASCIISuite.time_tab_read_int": {
            "code": "def time_tab_read_int(self):\n    self.read('tab', 'int')\n", 
            "goal_time": 2.0, 
            "name": "asciibench.ASCIISuite.time_tab_read_int", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "asciibench.ASCIISuite.time_tab_read_string": {
            "code": "def time_tab_read_string(self):\n    self.read('tab', 'string')\n", 
            "goal_time": 2.0, 
            "name": "asciibench.ASCIISuite.time_tab_read_string", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "asciibench.ASCIISuite.time_tab_write_float": {
            "code": "def time_tab_write_float(self):\n    self.write('tab', 'float')\n", 
            "goal_time": 2.0, 
            "name": "asciibench.ASCIISuite.time_tab_write_float", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "asciibench.ASCIISuite.time_tab_write_int": {
            "code": "def time_tab_write_int(self):\n    self.write('tab', 'int')\n", 
            "goal_time": 2.0, 
            "name": "asciibench.ASCIISuite.time_tab_write_int", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "asciibench.ASCIISuite.time_tab_write_string": {
            "code": "def time_tab_write_string(self):\n    self.write('tab', 'string')\n", 
            "goal_time": 2.0, 
            "name": "asciibench.ASCIISuite.time_tab_write_string", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "comparisonbench.ComparisonSuite.time_astropy_float": {
            "code": "def time_astropy_float(self):\n    ascii.read(StringIO(self.data['float']), format='basic', guess=False)\n", 
            "goal_time": 2.0, 
            "name": "comparisonbench.ComparisonSuite.time_astropy_float", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "comparisonbench.ComparisonSuite.time_astropy_int": {
            "code": "def time_astropy_int(self):\n    ascii.read(StringIO(self.data['int']), format='basic', guess=False)\n", 
            "goal_time": 2.0, 
            "name": "comparisonbench.ComparisonSuite.time_astropy_int", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "comparisonbench.ComparisonSuite.time_astropy_mixture": {
            "code": "def time_astropy_mixture(self):\n    ascii.read(StringIO(self.data['mixture']), format='basic', guess=False)\n", 
            "goal_time": 2.0, 
            "name": "comparisonbench.ComparisonSuite.time_astropy_mixture", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "comparisonbench.ComparisonSuite.time_astropy_mixture_no_strip": {
            "code": "def time_astropy_mixture_no_strip(self):\n    ascii.read(StringIO(self.data['mixture']), format='basic',\n               data_Splitter=NoStripSplitter, guess=False)\n", 
            "goal_time": 2.0, 
            "name": "comparisonbench.ComparisonSuite.time_astropy_mixture_no_strip", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "comparisonbench.ComparisonSuite.time_astropy_string": {
            "code": "def time_astropy_string(self):\n    ascii.read(StringIO(self.data['string']), format='basic', guess=False)\n", 
            "goal_time": 2.0, 
            "name": "comparisonbench.ComparisonSuite.time_astropy_string", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "comparisonbench.ComparisonSuite.time_astropy_write_float": {
            "code": "def time_astropy_write_float(self):\n    ascii.write(self.tables['float'], self.out, Writer=ascii.Basic, use_fast_writer=True)\n", 
            "goal_time": 2.0, 
            "name": "comparisonbench.ComparisonSuite.time_astropy_write_float", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "comparisonbench.ComparisonSuite.time_astropy_write_int": {
            "code": "def time_astropy_write_int(self):\n    ascii.write(self.tables['int'], self.out, Writer=ascii.Basic, use_fast_writer=True)\n", 
            "goal_time": 2.0, 
            "name": "comparisonbench.ComparisonSuite.time_astropy_write_int", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "comparisonbench.ComparisonSuite.time_astropy_write_mixture": {
            "code": "def time_astropy_write_mixture(self):\n    ascii.write(self.tables['mixture'], self.out, Writer=ascii.Basic, use_fast_writer=True)\n", 
            "goal_time": 2.0, 
            "name": "comparisonbench.ComparisonSuite.time_astropy_write_mixture", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "comparisonbench.ComparisonSuite.time_astropy_write_string": {
            "code": "def time_astropy_write_string(self):\n    ascii.write(self.tables['string'], self.out, Writer=ascii.Basic, use_fast_writer=True)\n", 
            "goal_time": 2.0, 
            "name": "comparisonbench.ComparisonSuite.time_astropy_write_string", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "comparisonbench.ComparisonSuite.time_numpy_genfromtxt_float": {
            "code": "def time_numpy_genfromtxt_float(self):\n    np.genfromtxt(StringIO(self.data['float']), delimiter=' ')\n", 
            "goal_time": 2.0, 
            "name": "comparisonbench.ComparisonSuite.time_numpy_genfromtxt_float", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "comparisonbench.ComparisonSuite.time_numpy_genfromtxt_int": {
            "code": "def time_numpy_genfromtxt_int(self):\n    np.genfromtxt(StringIO(self.data['int']), delimiter=' ',\n                  dtype='i4')\n", 
            "goal_time": 2.0, 
            "name": "comparisonbench.ComparisonSuite.time_numpy_genfromtxt_int", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "comparisonbench.ComparisonSuite.time_numpy_genfromtxt_mixture": {
            "code": "def time_numpy_genfromtxt_mixture(self):\n    # Test out genfromtxt's autoconversion\n    np.genfromtxt(StringIO(self.data['mixture']), delimiter=' ',\n                  dtype=None)\n", 
            "goal_time": 2.0, 
            "name": "comparisonbench.ComparisonSuite.time_numpy_genfromtxt_mixture", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "comparisonbench.ComparisonSuite.time_numpy_genfromtxt_string": {
            "code": "def time_numpy_genfromtxt_string(self):\n    np.genfromtxt(StringIO(self.data['string']), delimiter=' ',\n                  dtype='S10')\n", 
            "goal_time": 2.0, 
            "name": "comparisonbench.ComparisonSuite.time_numpy_genfromtxt_string", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "comparisonbench.ComparisonSuite.time_numpy_loadtxt_float": {
            "code": "def time_numpy_loadtxt_float(self):\n    np.loadtxt(StringIO(self.data['float']), delimiter=' ')\n", 
            "goal_time": 2.0, 
            "name": "comparisonbench.ComparisonSuite.time_numpy_loadtxt_float", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "comparisonbench.ComparisonSuite.time_numpy_loadtxt_int": {
            "code": "def time_numpy_loadtxt_int(self):\n    np.loadtxt(StringIO(self.data['int']), delimiter=' ',\n               dtype='i4')\n", 
            "goal_time": 2.0, 
            "name": "comparisonbench.ComparisonSuite.time_numpy_loadtxt_int", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "comparisonbench.ComparisonSuite.time_numpy_loadtxt_mixture": {
            "code": "def time_numpy_loadtxt_mixture(self):\n    np.loadtxt(StringIO(self.data['mixture']), delimiter=' ',\n               dtype=self.mix_dtype)\n", 
            "goal_time": 2.0, 
            "name": "comparisonbench.ComparisonSuite.time_numpy_loadtxt_mixture", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "comparisonbench.ComparisonSuite.time_numpy_loadtxt_string": {
            "code": "def time_numpy_loadtxt_string(self):\n    np.loadtxt(StringIO(self.data['string']), delimiter=' ',\n               dtype='S10')\n", 
            "goal_time": 2.0, 
            "name": "comparisonbench.ComparisonSuite.time_numpy_loadtxt_string", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "comparisonbench.ComparisonSuite.time_numpy_savetxt_float": {
            "code": "def time_numpy_savetxt_float(self):\n    np.savetxt(self.out, self.tables['float'])\n", 
            "goal_time": 2.0, 
            "name": "comparisonbench.ComparisonSuite.time_numpy_savetxt_float", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "comparisonbench.ComparisonSuite.time_numpy_savetxt_int": {
            "code": "def time_numpy_savetxt_int(self):\n    np.savetxt(self.out, self.tables['int'], fmt='%i')\n", 
            "goal_time": 2.0, 
            "name": "comparisonbench.ComparisonSuite.time_numpy_savetxt_int", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "comparisonbench.ComparisonSuite.time_numpy_savetxt_mixture": {
            "code": "def time_numpy_savetxt_mixture(self):\n    np.savetxt(self.out, self.tables['mixture'], fmt='%i %f %s ' \\\n               '%i %f %s %i %f %s')\n", 
            "goal_time": 2.0, 
            "name": "comparisonbench.ComparisonSuite.time_numpy_savetxt_mixture", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "comparisonbench.ComparisonSuite.time_numpy_savetxt_string": {
            "code": "def time_numpy_savetxt_string(self):\n    np.savetxt(self.out, self.tables['string'], fmt='%s')\n", 
            "goal_time": 2.0, 
            "name": "comparisonbench.ComparisonSuite.time_numpy_savetxt_string", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "comparisonbench.ComparisonSuite.time_pandas_read_csv_float": {
            "code": "def time_pandas_read_csv_float(self):\n    pandas.read_csv(StringIO(self.data['float']), sep=' ')\n", 
            "goal_time": 2.0, 
            "name": "comparisonbench.ComparisonSuite.time_pandas_read_csv_float", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "comparisonbench.ComparisonSuite.time_pandas_read_csv_int": {
            "code": "def time_pandas_read_csv_int(self):\n    pandas.read_csv(StringIO(self.data['int']), sep=' ')\n", 
            "goal_time": 2.0, 
            "name": "comparisonbench.ComparisonSuite.time_pandas_read_csv_int", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "comparisonbench.ComparisonSuite.time_pandas_read_csv_mixture": {
            "code": "def time_pandas_read_csv_mixture(self):\n    pandas.read_csv(StringIO(self.data['mixture']), sep=' ')\n", 
            "goal_time": 2.0, 
            "name": "comparisonbench.ComparisonSuite.time_pandas_read_csv_mixture", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "comparisonbench.ComparisonSuite.time_pandas_read_csv_string": {
            "code": "def time_pandas_read_csv_string(self):\n    pandas.read_csv(StringIO(self.data['string']), sep=' ')\n", 
            "goal_time": 2.0, 
            "name": "comparisonbench.ComparisonSuite.time_pandas_read_csv_string", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "comparisonbench.ComparisonSuite.time_pandas_read_table_float": {
            "code": "def time_pandas_read_table_float(self):\n    pandas.read_table(StringIO(self.data['float']), sep=' ')\n", 
            "goal_time": 2.0, 
            "name": "comparisonbench.ComparisonSuite.time_pandas_read_table_float", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "comparisonbench.ComparisonSuite.time_pandas_read_table_int": {
            "code": "def time_pandas_read_table_int(self):\n    pandas.read_table(StringIO(self.data['int']), sep=' ')\n", 
            "goal_time": 2.0, 
            "name": "comparisonbench.ComparisonSuite.time_pandas_read_table_int", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "comparisonbench.ComparisonSuite.time_pandas_read_table_mixture": {
            "code": "def time_pandas_read_table_mixture(self):\n    pandas.read_table(StringIO(self.data['mixture']), sep=' ')\n", 
            "goal_time": 2.0, 
            "name": "comparisonbench.ComparisonSuite.time_pandas_read_table_mixture", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "comparisonbench.ComparisonSuite.time_pandas_read_table_string": {
            "code": "def time_pandas_read_table_string(self):\n    pandas.read_table(StringIO(self.data['string']), sep=' ')\n", 
            "goal_time": 2.0, 
            "name": "comparisonbench.ComparisonSuite.time_pandas_read_table_string", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "comparisonbench.ComparisonSuite.time_pandas_write_float": {
            "code": "def time_pandas_write_float(self):\n    self.frames['float'].to_csv(self.out, sep=' ')\n", 
            "goal_time": 2.0, 
            "name": "comparisonbench.ComparisonSuite.time_pandas_write_float", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "comparisonbench.ComparisonSuite.time_pandas_write_int": {
            "code": "def time_pandas_write_int(self):\n    self.frames['int'].to_csv(self.out, sep=' ')\n", 
            "goal_time": 2.0, 
            "name": "comparisonbench.ComparisonSuite.time_pandas_write_int", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "comparisonbench.ComparisonSuite.time_pandas_write_mixture": {
            "code": "def time_pandas_write_mixture(self):\n    self.frames['mixture'].to_csv(self.out, sep=' ')\n", 
            "goal_time": 2.0, 
            "name": "comparisonbench.ComparisonSuite.time_pandas_write_mixture", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "comparisonbench.ComparisonSuite.time_pandas_write_string": {
            "code": "def time_pandas_write_string(self):\n    self.frames['string'].to_csv(self.out, sep=' ')\n", 
            "goal_time": 2.0, 
            "name": "comparisonbench.ComparisonSuite.time_pandas_write_string", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "corebench.CoreSuite.time_base_splitter": {
            "code": "def time_base_splitter(self):\n    core.BaseSplitter().process_val(self.line)\n", 
            "goal_time": 2.0, 
            "name": "corebench.CoreSuite.time_base_splitter", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "corebench.CoreSuite.time_continuation_inputter": {
            "code": "def time_continuation_inputter(self):\n    core.ContinuationLinesInputter().process_lines(self.lines)\n", 
            "goal_time": 2.0, 
            "name": "corebench.CoreSuite.time_continuation_inputter", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "corebench.CoreSuite.time_convert_vals": {
            "code": "def time_convert_vals(self):\n    core.TableOutputter()._convert_vals(self.cols)\n", 
            "goal_time": 2.0, 
            "name": "corebench.CoreSuite.time_convert_vals", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "corebench.CoreSuite.time_default_splitter_call": {
            "code": "def time_default_splitter_call(self):\n    core.DefaultSplitter()(self.csv_line)\n", 
            "goal_time": 2.0, 
            "name": "corebench.CoreSuite.time_default_splitter_call", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "corebench.CoreSuite.time_default_splitter_join": {
            "code": "def time_default_splitter_join(self):\n    core.DefaultSplitter().join(self.vals)\n", 
            "goal_time": 2.0, 
            "name": "corebench.CoreSuite.time_default_splitter_join", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "corebench.CoreSuite.time_whitespace_splitter": {
            "code": "def time_whitespace_splitter(self):\n    core.WhitespaceSplitter().process_line(self.line)\n", 
            "goal_time": 2.0, 
            "name": "corebench.CoreSuite.time_whitespace_splitter", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "fixedwidthbench.FixedWidthSuite.time_header": {
            "code": "def time_header(self):\n    self.header.get_cols(self.lines)\n", 
            "goal_time": 2.0, 
            "name": "fixedwidthbench.FixedWidthSuite.time_header", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "fixedwidthbench.FixedWidthSuite.time_splitter": {
            "code": "def time_splitter(self):\n    self.splitter(self.lines[1:])\n", 
            "goal_time": 2.0, 
            "name": "fixedwidthbench.FixedWidthSuite.time_splitter", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "ipacbench.IPACSuite.time_data_str_vals": {
            "code": "def time_data_str_vals(self):\n    data = IpacData()\n    data.cols = list(six.itervalues(self.table.columns))\n    data.str_vals()\n", 
            "goal_time": 2.0, 
            "name": "ipacbench.IPACSuite.time_data_str_vals", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "ipacbench.IPACSuite.time_get_cols": {
            "code": "def time_get_cols(self):\n    self.header.get_cols(self.lines)\n", 
            "goal_time": 2.0, 
            "name": "ipacbench.IPACSuite.time_get_cols", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "ipacbench.IPACSuite.time_header_str_vals": {
            "code": "def time_header_str_vals(self):\n    header = IpacHeader()\n    header.cols = list(six.itervalues(self.table.columns))\n    header.DBMS = False\n    header.str_vals()\n", 
            "goal_time": 2.0, 
            "name": "ipacbench.IPACSuite.time_header_str_vals", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "ipacbench.IPACSuite.time_splitter": {
            "code": "def time_splitter(self):\n    self.splitter.join(self.vals, self.widths)\n", 
            "goal_time": 2.0, 
            "name": "ipacbench.IPACSuite.time_splitter", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "rdbbench.RDBSuite.time_get_cols": {
            "code": "def time_get_cols(self):\n    self.header.get_cols(self.lines)\n", 
            "goal_time": 2.0, 
            "name": "rdbbench.RDBSuite.time_get_cols", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "sextractorbench.SExtractorSuite.time_header": {
            "code": "def time_header(self):\n    self.header.get_cols(self.lines)\n", 
            "goal_time": 2.0, 
            "name": "sextractorbench.SExtractorSuite.time_header", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "tablebench.TableSuite.mem_table_init": {
            "code": "def mem_table_init(self):\n    return table.Table(self.lst)\n", 
            "name": "tablebench.TableSuite.mem_table_init", 
            "timeout": 60.0, 
            "type": "memory", 
            "unit": "bytes"
        }, 
        "tablebench.TableSuite.mem_table_outputter": {
            "code": "def mem_table_outputter(self):\n    return self.outputter(self.cols, {'table': {}})\n", 
            "name": "tablebench.TableSuite.mem_table_outputter", 
            "timeout": 60.0, 
            "type": "memory", 
            "unit": "bytes"
        }, 
        "tablebench.TableSuite.time_str_vals_float": {
            "code": "def time_str_vals_float(self):\n    self.table_cols[1].iter_str_vals()\n", 
            "goal_time": 2.0, 
            "name": "tablebench.TableSuite.time_str_vals_float", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "tablebench.TableSuite.time_str_vals_int": {
            "code": "def time_str_vals_int(self):\n    self.table_cols[0].iter_str_vals()\n", 
            "goal_time": 2.0, 
            "name": "tablebench.TableSuite.time_str_vals_int", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "tablebench.TableSuite.time_str_vals_str": {
            "code": "def time_str_vals_str(self):\n    self.table_cols[2].iter_str_vals()\n", 
            "goal_time": 2.0, 
            "name": "tablebench.TableSuite.time_str_vals_str", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "tablebench.TableSuite.time_table_init_from_list": {
            "code": "def time_table_init_from_list(self):\n    self.table._init_from_list(self.table_cols, ['1', '2', '3'],\n                               [None, None, None], 3, True)\n", 
            "goal_time": 2.0, 
            "name": "tablebench.TableSuite.time_table_init_from_list", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }, 
        "tablebench.TableSuite.time_table_outputter": {
            "code": "def time_table_outputter(self):\n    self.outputter(self.cols, {'table': {}})\n", 
            "goal_time": 2.0, 
            "name": "tablebench.TableSuite.time_table_outputter", 
            "number": 0, 
            "repeat": 3, 
            "timeout": 60.0, 
            "type": "time", 
            "unit": "seconds"
        }
    }, 
    "date_to_hash": {
        "1404863529000": "6170e132", 
        "1404927892000": "d6d524b6"
    }, 
    "machines": {
        "michael-Gazelle-Professional": {
            "arch": "x86_64", 
            "cpu": "Intel(R) Core(TM) i7-4810MQ CPU @ 2.80GHz (8 cores)", 
            "machine": "michael-Gazelle-Professional", 
            "os": "Linux 3.13.0-30-generic", 
            "ram": "8.2G", 
            "version": 1
        }
    }, 
    "params": {
        "Cython": [
            null
        ], 
        "arch": [
            "x86_64"
        ], 
        "cpu": [
            "Intel(R) Core(TM) i7-4810MQ CPU @ 2.80GHz (8 cores)"
        ], 
        "machine": [
            "michael-Gazelle-Professional"
        ], 
        "numpy": [
            "1.8"
        ], 
        "os": [
            "Linux 3.13.0-30-generic"
        ], 
        "pandas": [
            null
        ], 
        "python": [
            "2.7"
        ], 
        "ram": [
            "8.2G"
        ], 
        "six": [
            null
        ]
    }, 
    "project": "astropy", 
    "project_url": "http://www.astropy.org/", 
    "show_commit_url": "http://github.com/astropy/astropy/commit/", 
    "tags": {
        "v0.1": 1340086193000, 
        "v0.2": 1361312808000, 
        "v0.2.1": 1365018342000, 
        "v0.2.2": 1369169818000, 
        "v0.2.3": 1369943695000, 
        "v0.2.4": 1374690436000, 
        "v0.2.5": 1382718598000, 
        "v0.2b1": 1356381732000, 
        "v0.2b2": 1359508111000, 
        "v0.2rc1": 1360776151000, 
        "v0.3": 1384996150000, 
        "v0.3.1": 1393955310000, 
        "v0.3.2": 1399997164000, 
        "v0.3b1": 1383542385000, 
        "v0.3rc1": 1384388274000, 
        "v0.4rc1": 1404233912000
    }
}